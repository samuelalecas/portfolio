import { useNavigate } from "react-router-dom";
import { AppContext } from "../../contexts/App.context";
import { useForm } from "../../hooks/useForm.hook";
import { Button } from "../atoms/button/Button.component";
import InputText from "../atoms/inputText/InputText.component";
import { FormEvent, useContext } from "react";

interface LoginDataInterface {
  email: string;
  password: string;
}

// Generated by https://quicktype.io

export interface LoginResponse {
  user: User;
  token: string;
}

export interface User {
  name: string;
  email: string;
  role: string;
  status: boolean;
  google: boolean;
  uid: string;
}

const initialLoginForm: LoginDataInterface = { email: "", password: "" };

export const LoginForm = () => {
  const navigate = useNavigate();

  const { setToken, setUser } = useContext(AppContext);

  const { formData, onChange } = useForm<LoginDataInterface>(initialLoginForm);

  const onSubmit = async (e?: FormEvent) => {
    e?.preventDefault(); // Para evitar la recarga de la página
    try {
      const resp = await fetch(
        "https://noderestserver-production-241a.up.railway.app/api/v1/auth/login",
        {
          method: "POST",
          headers: { "content-type": "application/json; charset=UTF-8" },
          body: JSON.stringify(formData),
        }
      );
      const data: LoginResponse = await resp.json();
      if (!!data.token) {
        setToken(data.token);
        localStorage.setItem("token", data.token);
        setUser(data.user);
        localStorage.setItem("user", JSON.stringify(data.user));
        navigate("/weather-app");
      } else {
        throw new Error;
      }
    } catch (error) {
      console.log(error);
    }
  };

  return (
    <form
      action=""
      className="flex flex-col items-center gap-4"
      onSubmit={onSubmit}
    >
      <InputText
        name="email"
        placeholder="Usuario"
        value={formData.email}
        onChange={(e) => onChange(e)}
      />
      <InputText
        name="password"
        type="password"
        placeholder="Contraseña"
        value={formData.password}
        onChange={(e) => onChange(e)}
      />
      <Button type="submit" name="Enviar" width="36" />
    </form>
  );
};

// export const LoginForm = (onClick: () => void) => {
//   return (
//     <form action="" className='flex flex-col items-center gap-4'>
//         <InputText placeholder="Usuario"/>
//         <InputText type="password" placeholder='Contraseña'/>
//         <Button type="submit" name="Enviar" width='36' onClick={onClick}/>
//     </form>
//   )
// }
